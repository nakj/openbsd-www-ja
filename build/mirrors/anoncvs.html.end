</ul>

<p>
<em>Note:</em> If your server is listed on here with inaccurate or
unknown information, please contact
<a href="mailto:beck@openbsd.org"><tt>beck@openbsd.org</tt></a>

<p>
You may want to use 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=traceroute&amp;sektion=8&amp;format=html">traceroute(8)</a>
to find out which server is nearest you.
Problems with a server should be reported to the <b>maintainer</b> of the
server in question.

<h3><a name="CRYPTO"><font color="#0000e0">Getting crypto sources through 
cvs(1)</font></a></h3>

<p>
<strong>IMPORTANT NOTE:</strong>
There are a few issues relating to cryptographic software that everyone
should be aware of:
<ul>
<li>The OpenBSD sources are from Canada.
As
	<a href="http://www.efc.ca/pages/doc/crypto-export.html">
	researched by a Canadian individual</a>
and as
	<a href="http://axion.physics.ubc.ca/ECL.html">
	described in the Export Control list of Canada</a>
it is legal to export crypto software from Canada to the world.
<p>
<li>However, if you are outside the USA or Canada, you should not
fetch the cryptographic sections of the OpenBSD sources from an
anoncvs server located in the USA. The files in question are...
<ul>
<li>src/kerberosIV/*
<li>src/kerberosV/*
<li>src/lib/libdes/*
<li>src/lib/libc/crypt/crypt.c
<li>src/lib/libc/crypt/morecrypt.c
<li>src/sys/crypto
<li>src/sys/netinet
<li>src/usr.sbin/afs/src/rxkad/*
<li>XF4/xc-mit/lib/Xdmcp/Wraphelp.c
<li>XF4/xc-old/lib/Xdmcp/Wraphelp.c
<li>XF4/xc/lib/Xdmcp/Wraphelp.c
</ul>
Because of US Dept. of Commerce policy,
crypto software may only be exported to Canada from the USA.
</ul>

<h3><a name="EXAMPLE"><font color="#0000e0">Example usages for cvs(1)</font>
</a></h3>

<p>
NOTICE: If you want to update a branch (such as a patch branch)
to <i>current</i>, you would add the <code>-A</code>
flag to cvs, but this flag is of little use otherwise.   Some older
versions of the OpenBSD documentation recommended use of this flag
in many examples. We no longer recommend this flag unless absolutely necessary.

<p>
A sample use of an anoncvs server would be:
<pre>
$ <strong>cd /tmp</strong>
$ <strong>cvs -d anoncvs@anoncvs.ca.openbsd.org:/cvs get src/sys/arch/sparc</strong>
    [copies the files from the repository to your machine]
$ <strong>cd src/sys/arch/sparc</strong>
$ <strong>cvs log locore.s</strong>
    [shows the commit log for the chosen file]
$ <strong>cvs diff -bc -r1.1 -r1.5 locore.s</strong>
    [shows the changes between revisions 1.1 and rev 1.5]
</pre>

<p>
<a name="pserver">In order to use a cvs ``pserver'' (a direct TCP connection 
instead of using ssh or rsh) you must login once:</a>

<pre>
$ <strong>cvs -d :pserver:anoncvs@anoncvs.ca.openbsd.org:/cvs login</strong>
(Logging in to anoncvs@anoncvs1.ca.openbsd.org)
CVS password: <strong>anoncvs</strong>
    [This writes a line to ~/.cvspass (filename over-ridden by CVS_PASSFILE).]
    [An example line from my ~/.cvspass after typing 'blah' for the above    ]
    [password is:                                                            ]
    [:pserver:anoncvs@anoncvs5.usa.openbsd.org:/cvs Au'yc                    ]
    [After logging in ONCE every other use of the above CVSROOT will work.   ]
$ <strong>cvs -d :pserver:anoncvs@anoncvs.ca.openbsd.org:/cvs get ksrc-i386 ksrc-common</strong>
    [Allows you to retrieve ONLY that necessary to rebuild an i386 kernel.   ]
</pre>

<p>
Here is how someone using anoncvs regularly would update his
source tree:
<ul><li>First, start out by `get'-ing an initial tree:

<p> (If you are following <i>current</i>):
<pre>
	# <strong>cd /usr</strong>
	# <strong>cvs -qd anoncvs@anoncvs.ca.openbsd.org:/cvs get -P src</strong>
</pre>

<p> (If you are following the patch branch for 4.6):
<pre>
	# <strong>cd /usr</strong>
	# <strong>cvs -qd anoncvs@anoncvs.ca.openbsd.org:/cvs get -rOPENBSD_4_6 -P src</strong>
</pre>

<li> Anytime afterwards, to `update' this tree:
<p> (If you are following <i>current</i>):
<pre>
	# <strong>cd /usr/src</strong>
	# <strong>cvs -q up -Pd</strong>
</pre>

<p> (If you are following the patch branch for 4.6):
<pre>
	# <strong>cd /usr/src</strong>
	# <strong>cvs -q up -rOPENBSD_4_6 -Pd</strong>
</pre>

Every time you ran this it would synchronize your /usr/src tree. It would
not destroy any of your local changes, rather it would attempt to merge
changes in.

<p>
<li> NOTE:
If you are updating a source tree that you initially fetched
from a different server, or from a CD, you <strong>must</strong>
add the <em>-d anoncvs@anoncvs.ca.openbsd.org:/cvs</em> options to cvs.
<pre>
	# <strong>cd /usr/src</strong>
	# <strong>cvs -d anoncvs@anoncvs.ca.openbsd.org:/cvs -q up -Pd</strong>
</pre>
</ul>

<p>
To <a name="ports">use</a> <a href="ports.html">ports</a>, it is similar to src:
<ul><li>
<p> (If you are following <i>current</i>):
<pre>
	# <strong>cd /usr</strong>
	# <strong>cvs -qd anoncvs@anoncvs.ca.openbsd.org:/cvs get -P ports</strong>
</pre>
<p> (If you are following the patch branch for 4.6):
<pre>
	# <strong>cd /usr</strong>
	# <strong>cvs -qd anoncvs@anoncvs.ca.openbsd.org:/cvs get -rOPENBSD_4_6 -P ports</strong>
</pre>
<li> Anytime afterwards, to `update' this tree:
<p> (If you are following <i>current</i>):
<pre>
	# <strong>cd /usr/ports</strong>
	# <strong>cvs -q up -Pd</strong>
</pre>
<p> (If you are following the patch branch for 4.6):
<pre>
	# <strong>cd /usr/ports</strong>
	# <strong>cvs -q up -rOPENBSD_4_6 -Pd</strong>
</pre>
</ul>

In the above example, <i>-q</i> is optional, only intended to minimize
cvs's output.  For those who like to see screenfulls of output, it
can be omitted.

<p>
To make a diff of a locally patched module (here <i>cd.c</i>) to include with
a bug report:
<pre>
	# <strong>cd /usr</strong>
	# <strong>cvs diff -u src/sys/scsi/cd.c &gt; /tmp/patch</strong>
</pre>

<p>
The <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=cvs&amp;sektion=1&amp;format=html">
cvs(1) man page</a>
(included with the CVS sources) has much more
information about how CVS can be used.

<p>
<strong>Warning:</strong>
When using cvs you should take care that your current directory is either
the root of the tree you are referencing or in a separate place such as /tmp.
Some commands such as "get" can create an arbitrary sub-tree in the current
directory, and a subsequent update will recursively flesh out this sub-tree.

<p>
The anoncvs service gives fledgling developers a chance to learn CVS
operation and get thoroughly involved in the development process
before getting "commit" access -- as a result of showing useful
skills and high quality results they will naturally later be given
developer access.  As well, people providing patches can create
their "diff"s relative to the CVS tree, which will ease integration.


<h3><a name="WHICH"><font color="#0000e0">Use rsh(1) or ssh(1)?</font></a></h3>

CVS supports three access methods between the CVS server and the CVS
client:

<ul>
<li><b>ssh:</b> Secure Shell can be used to access the anonymous CVS servers.
This is the <i>recommended</i> way of doing so, as it is encrypted.

<li><b>rsh:</b> Remote Shell can be used on some of the servers for users
who don't have access to <a href="http://www.openssh.com/">ssh</a>.

<li><b>pserver:</b> pserver is primarily useful for users who are behind
firewalls that block the other two connections.
</ul>

<p>
<b>NOTE:</b> For users wishing to use rsh, you must first set the
<tt>CVS_RSH</tt> environment variable to point to the rsh(1) program:

<ul>
<li>For Korn/Bourne shells:
<pre>
        $ <b>export CVS_RSH=/usr/bin/rsh</b>
</pre>
<li>For csh/tcsh:
<pre>
        % <b>setenv CVS_RSH /usr/bin/rsh</b>
</pre>
</ul>

<p>
By default, OpenBSD's CVS client uses ssh ("secure shell":
<a href="http://www.openssh.com/">OpenSSH</a>) to talk to the CVS server.

<p>
Many of the CVS sites no longer support rsh or pserver for security reasons.
Local
problems like firewalls or imperfect protocol emulators such as slirp may
also hinder rsh usage.  However, if rsh is desired, one must set the
<var>CVS_RSH</var> environment variable to point to rsh
(typically <strong>/usr/bin/rsh</strong>).

<p>
If local policy prevents outgoing connections to ssh's default port of 22,
port 2022 may be used in its place.  Note, however, that not all anoncvs
servers accept ssh connections on this port.  Furthermore, most anoncvs servers
no longer accept the <strong>none</strong> cipher, as it is disabled in
recent versions of ssh for security reasons.  Also, do not be tempted
to turn on compression: CVS already compresses.

<p>
One could specify something like the following in the
<strong>$HOME/.ssh/config</strong> configuration file to avoid the pitfalls
and restrictions mentioned above:
<pre>
	Host anoncvs.ca.openbsd.org
	    Compression no
	    Port 2022
</pre>

<p>
CVS is a little noisy starting up; to quiet it a bit you may want to
do this:

<pre>
	<strong>$ export CVS_CLIENT_PORT=-1</strong>
</pre>

<p>
<h3><a name="SUP"><font color="#0000e0">Mirroring the CVS repository via 
sup(1)</font></a></h3>

<p>
Users wishing to mirror the OpenBSD CVS tree itself may now do so
from <em>anoncvs.usa.openbsd.org</em> or <em>anoncvs3.usa.openbsd.org</em>
(these are different machines).  Note that this is the cvs tree,
<b>not</b> a checked out source tree.  It is only useful if you
want to be able to do fast cvs operations (diff, annotate, etc) or
if you have multiple source trees and you only want to transfer new
data once (you can then checkout a tree from your local cvs mirror).
<p>
A sample supfile would be:
<pre>
	cvs host=anoncvs.usa.openbsd.org hostbase=/ base=/home delete
</pre>
<p>
which would mirror the cvs tree into /home/cvs with the sup data
files ending up in /home/sup.  The full OpenBSD cvs tree is currently
about 3.5GB in size, and will, of course continue to grow.

<h3><a name="MIRROR"><font color="#0000e0">Setting up an anoncvs mirror
</font></a></h3>

<p>
If you wish to setup a new anoncvs mirror site and make it available to
the general public, please contact the anoncvs
<a href="mailto:sup@openbsd.org">maintainer</a>.
Anoncvs mirrors currently require about 3.5GB of disk (and it will grow!),
and use up to 32MB of swap
per anoncvs user (assuming the user does a large operation; while smaller
operations use fewer resources, anoncvs still makes much more of an
impact than ftp or sup).  Such anoncvs machines should have excellent
network connectivity for the area they are expected to serve.  A
<a href="anoncvs.shar">document</a>
which describes the setup of anoncvs servers is available.

<h3><font color="#0000e0">Final notes</font></h3>
After upgrading your source tree, you should read the comments
at the top of <kbd>/usr/src/Makefile</kbd> before attempting
a build.  Also, you should build a new kernel <strong>before</strong>
doing a <kbd>make build</kbd> if possible.  In some cases it may be
necessary to rebuild and install the <kbd>config</kbd> utility before
you can build the kernel.  If <kbd>config GENERIC</kbd> fails this
is probably the case.
<p>
It is important to note that upgrading from a release to the current tree
by rebuilding the sources can be rather difficult due to dependencies
that are often not obvious.  Therefore, it is suggested that you first
install the latest snapshot before attempting a tree build from source.

<hr>
<a href="index.html"><img height="24" width="24" src="back.gif" border="0" 
alt="OpenBSD"></a> 
<a href="mailto:www@openbsd.org">www@openbsd.org</a>
<br><small>$OpenBSD: anoncvs.html.end,v 1.12 2009/10/23 08:09:11 sthen Exp $
</small>

</body>
</html>
